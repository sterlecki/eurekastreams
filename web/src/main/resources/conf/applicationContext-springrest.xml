<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-propertyreplacer.xml" />

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="urlMap">
        	<map>
        		<entry key="/avatar/**" value-ref="avatarController" />
        		<entry key="/emailcontact/**" value-ref="emailContactController" />
        		<entry key="/apipreauth/**" value-ref="actionApiController" />
        	</map>
        </property>
    </bean>
    
    <bean id="avatarController" class="org.eurekastreams.web.services.PersonPropertiesAvatarController">
        <constructor-arg ref="getPeopleByAccountIdsMapper" />
        <constructor-arg ref="getPersonAvatarId" />
        <constructor-arg>
			<bean class="org.codehaus.jackson.map.MappingJsonFactory">
				<constructor-arg ref="actionApiObjectMapper" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="actionApiObjectMapper" />
    </bean>
    
    <bean id="emailContactController" class="org.eurekastreams.web.services.EmailContactController">
    	<constructor-arg ref="serviceActionController" />
   		<constructor-arg ref="principalPopulator" />
   		<constructor-arg>
   			<map>
   				<entry key="PERSON" value-ref="getPersonByIdAction" />
   				<entry key="GROUP" value-ref="getGroupByIdAction" />
   			</map>
   		</constructor-arg>
   		<constructor-arg ref="getStreamEmailAddressForCurrentUserAction" />
    </bean>
	
	<bean class="org.eurekastreams.web.services.views.BeanNameViewResolver" autowire="constructor" />

	<bean id="vcardView" class="org.springframework.web.servlet.view.velocity.VelocityView">
		<property name="url" value="/conf/templates/STREAM_EMAIL_CONTACT.vcf" />
		<property name="velocityEngine" ref="velocityEngine" />
		<property name="contentType" value="text/x-vcard" />
	</bean>

	<bean id="actionApiObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

	<!-- autowire="constructor" is used to provide the BeanFactory without having to implement BeanFactoryAware.  All 
		other constructor arguments are explicitly specified, since we don't want Spring to autowire them.  -->
	<bean id="actionApiController" class="org.eurekastreams.web.services.ActionApiController" autowire="constructor">
		<constructor-arg ref="serviceActionController" />
		<constructor-arg ref="exceptionSanitizer" />
		<constructor-arg>
			<list>
				<ref bean="springSecurityContextPrincipalPopulatorAllowNull" />
			</list>
		</constructor-arg>
		<constructor-arg ref="clientExtractors" />
		<constructor-arg>
			<bean class="org.codehaus.jackson.map.MappingJsonFactory">
				<constructor-arg ref="actionApiObjectMapper" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="actionApiObjectMapper" />
		<constructor-arg ref="jsonFieldObjectExtractor" />
		<constructor-arg value="false" type="boolean" />
		<constructor-arg ref="actionTypeMap" />
		<constructor-arg ref="actionRewriteMap" />
		<constructor-arg value="${eureka.fullapi.verifysession}" type="boolean" />
	</bean>

</beans>
