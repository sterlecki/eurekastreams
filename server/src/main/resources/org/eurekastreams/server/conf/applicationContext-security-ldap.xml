<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
     http://www.springframework.org/schema/security 
     http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
                        
    <http entry-point-ref="authenticationProcessingFilterEntryPoint">    	
    	<!-- block direct access to targets of rewrites -->
        <intercept-url pattern="/resources/api/**" access="ROLE_DENY_ALL"/>
        <intercept-url pattern="/newresources/**" access="ROLE_DENY_ALL"/>
        <intercept-url pattern="/oldresources/**" access="ROLE_DENY_ALL"/>

        <intercept-url pattern="/index.html" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/login_disabled.html" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/no_credentials.html" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/style/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/scripts/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/eureka.nocache.js" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/*.cache.html" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/requestaccess.html" filters="none"/>
        <intercept-url pattern="/requestaccess_connect.html" filters="none"/>
        <intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/gwt-dnd.css" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/resources/autocomplete/entities/**" access="ROLE_USER"/>
        <intercept-url pattern="/resources/atom/**" access="ROLE_USER"/>
        <intercept-url pattern="/resources/util/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
		<intercept-url pattern="/resources/emailcontact/**" access="ROLE_USER"/>
        <intercept-url pattern="/resources/**" access="ROLE_OAUTH_CLIENT, ROLE_USER"/>  
        <intercept-url pattern="/themes/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/social/**" access="ROLE_ANONYMOUS, ROLE_USER"/>   
        <intercept-url pattern="/gadgets/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/org/eurekastreams/gadgets/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/rpc" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/rpc/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <intercept-url pattern="/eurekastreams/photos/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
	    <intercept-url pattern="/api/0/**" access="ROLE_OAUTH_CLIENT, ROLE_USER"/>
	    <intercept-url pattern="/plugins/**" access="ROLE_ANONYMOUS, ROLE_USER" />
        <intercept-url pattern="/**" access="ROLE_USER"/>
        <anonymous />
        <!-- key MUST match key in persistentLoginService -->        
        <remember-me services-ref="persistentLoginService" key="595"/>        
        <logout />
    </http>

	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
		<beans:property name="loginFormUrl" value="/no_credentials.html" />
		<beans:property name="forceHttps" value="false" />
	</beans:bean>

	<beans:bean id="authFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
		<custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
		<beans:property name="defaultTargetUrl" value="/login_success.html" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="org.springframework.security.DisabledException">
					/login_disabled.html
				</beans:prop>
                <beans:prop key="org.springframework.security.LockedException">
                    /login_disabled.html
                </beans:prop>
				<beans:prop key="org.springframework.security.userdetails.UsernameNotFoundException">
					/login_disabled.html
				</beans:prop>
			</beans:props>
		</beans:property>		
	</beans:bean>
	
	<authentication-manager alias="authenticationManager" />

    <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="${eureka.security.ldap.connstr}" />
        <beans:property name="userDn" value="${eureka.security.ldap.userdn}" />
        <beans:property name="password" value="${eureka.security.ldap.password}" />
    </beans:bean> 

    <beans:bean
        class="org.springframework.security.providers.ldap.LdapAuthenticationProvider">
        <custom-authentication-provider />
        <beans:constructor-arg>
            <beans:bean
                class="org.springframework.security.providers.ldap.authenticator.BindAuthenticator">
                <beans:constructor-arg ref="contextSource" />
                <beans:property name="userSearch">
                    <beans:bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
	    				<beans:constructor-arg index="0" value="" />
	    				<beans:constructor-arg index="1" value="(&amp;(sAMAccountName={0})(objectclass=user))" />
	    				<beans:constructor-arg index="2" ref="contextSource" />
					</beans:bean>
                </beans:property>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg ref="authoritiesPopulator" />
<!--         <beans:constructor-arg ref="dummyAuthoritiesPopulator" /> -->
        <beans:property name="userDetailsContextMapper" ref="userDetailsContextMapper" />
   	</beans:bean>
   	 		
	<!-- ldapAuthenticator requires AuthoritiesPopulator, but we get authorities from the user
    details service. This is a "do-nothing" implementation to keep LdapAuthenticationProvider 
    happy as it won't accept a null AuthoritiesPopulator -->
    <beans:bean id="dummyAuthoritiesPopulator" 
    	class="org.eurekastreams.server.service.security.ldap.DummyLdapAuthoritiesPopulator" />
    	
    <!-- AuthoritiesPopulator that uses same authorityProvider implementation as userDetailsService -->
   	<beans:bean id="authoritiesPopulator" class="org.eurekastreams.server.service.security.ldap.LdapAuthoritiesPopulatorImpl">
    	<beans:constructor-arg ref="authorityProvider" />
    </beans:bean>
    
    <beans:bean id="authorityProvider" class="org.eurekastreams.server.service.security.userdetails.AuthorityProviderImpl" />
	
    <!-- wrapper around userDetailsService for use by ldapAuthenticationProvider -->
    <beans:bean id="userDetailsContextMapper" class="org.eurekastreams.server.service.security.ldap.UserDetailsContextMapperImpl">
    	<beans:constructor-arg ref="userDetailsService" />
    </beans:bean>	
    
    <beans:bean id="userDetailsService" class="org.eurekastreams.server.service.security.userdetails.UserDetailsServiceImpl">
    	<beans:constructor-arg ref="jpaPersonMapper" />
    	<beans:constructor-arg ref="persistentLoginRepository" />
    	<beans:constructor-arg ref="authorityProvider" />
        <beans:constructor-arg ref="serviceActionController" />
        <beans:constructor-arg ref="createPersonFromLdap" />    	
    	<beans:property name="authenticationType" value="FORM" />
    </beans:bean>      
    
    <beans:bean id="persistentLoginRepository" class="org.eurekastreams.server.service.security.persistentlogin.PersistentLoginRepositoryImpl">
    	<beans:constructor-arg>    	
    		<beans:ref bean="jpaPersistentLoginMapper"/>
    	</beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="persistentLoginService" class="org.eurekastreams.server.service.security.persistentlogin.PersistentLoginService" >    
    	<beans:constructor-arg value="595" />
    	<beans:constructor-arg>    	
    		<beans:ref bean="userDetailsService"/>
    	</beans:constructor-arg>
    	<beans:constructor-arg>    	
    		<beans:ref bean="persistentLoginRepository"/>
    	</beans:constructor-arg>
    	<!-- <beans:property name="alwaysRemember" value="true" /> -->
    </beans:bean>	    
    
</beans:beans>
