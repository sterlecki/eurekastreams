<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>eurekastreams-parent</artifactId>
        <groupId>org.eurekastreams</groupId>
        <version>2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-taskqueueprocessor</artifactId>
    <name>Eureka Streams Task Queue Processor</name>
    <version>2.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>2.4.2</version>
        </dependency>    
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.12</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.6.1</version>
	</dependency>
        <!-- Quartz -->
        <dependency>
            <groupId>quartz</groupId>
            <artifactId>quartz</artifactId>
            <version>1.5.2</version>
        </dependency>		
		<!-- Unit Testing -->
		<!-- JUnit -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>${version.junit}</version>
		<scope>test</scope>
	</dependency>
	<!-- JMock -->
	<dependency>
		<groupId>org.jmock</groupId>
		<artifactId>jmock-junit4</artifactId>
		<version>2.5.1</version>
           <scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.jmock</groupId>
		<artifactId>jmock-legacy</artifactId>
		<version>2.5.1</version>
		<scope>test</scope>
	</dependency>
	<!-- Spring Framework -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring</artifactId>
		<version>2.5.6.SEC02</version>
	</dependency>
	<!-- ActiveMQ core -->
	<dependency>
	  <groupId>org.apache.activemq</groupId>
	  <artifactId>activemq-core</artifactId>
	  <version>5.2.0</version>
	</dependency>	
    <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-pool</artifactId>
        <version>5.2.0</version>
    </dependency>	
	<!-- Eureka Streams --> 
        <!-- Server -->
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>eurekastreams-server</artifactId>
            <version>${project.version}</version>
        </dependency>  
        <!--         -->
        <dependency>
            <groupId>it.cnr.isti.domoware</groupId>
            <artifactId>org.postgresql.jdbc4</artifactId>
            <version>8.3-603</version>
        </dependency>
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>${build.maven.sharedresources.artifactid}</artifactId>
            <version>${build.maven.sharedresources.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>        
     </dependencies>
     <build>
        <plugins>
           <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <configuration>
                 <skip>true</skip>
              </configuration>
            </plugin>
        </plugins>
    </build>
<!--
    Profile Activation:
        Maven Flag missing (-D):

        Maven Flag (-D) with no value:
            rpm.build - if exists, perform the steps to create an RPM out of the build

        Platform:
-->
    <profiles>	        
    	<profile>
    		<id>Configure plugins when in webnode mode.</id>
    		<activation>
    			<property>
    				<name>nodetype</name>
    				<value>webnode</value>
    			</property>
    		</activation>
			<build>
				<finalName>eurekastreams-taskqueueprocessor</finalName>
				<plugins>	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.5</source>
							<target>1.5</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
						  <execution>
							<id>unpack-shared-resources</id>
							<goals>
							  <goal>unpack-dependencies</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								 <outputDirectory>${project.build.directory}/unpack</outputDirectory>
								 <includeGroupIds>${project.groupId}</includeGroupIds>
								 <includeTypes>zip</includeTypes>
								 <includeScopes>provided</includeScopes>
								 <excludeTransitive>true</excludeTransitive>
							</configuration>
						  </execution>
						</executions>
					</plugin>
				    <plugin>
				        <groupId>org.codehaus.mojo</groupId>
				        <artifactId>exec-maven-plugin</artifactId>
				        <version>1.1</version>
				        <executions>
				          <execution>
				            <goals>
				              <goal>java</goal>
				            </goals>
				          </execution>
				        </executions>
				        <configuration>
				          <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				          <arguments>
				            <argument></argument>
				          </arguments>
				          <systemProperties>
				            <systemProperty>
				              <key>log.home</key>
				              <value>target/logs</value>
				            </systemProperty>
				          </systemProperties>
				        </configuration>
				    </plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>create lib folder</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<mkdir dir="${project.build.directory}/unpack/lib-bin" />
										<mkdir dir="${project.build.directory}/unpack/lib-java" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
						  <execution>
							<id>copy extra jars</id>
							<phase>prepare-package</phase>
							<goals>
							  <goal>copy-resources</goal>
							</goals>
							<configuration>
							  <outputDirectory>${project.build.directory}/jsw/taskqueueprocessor/repo</outputDirectory>
							  <resources>          
								<resource>
								  <directory>${project.build.directory}/unpack/lib-java</directory>
								  <filtering>false</filtering>
								</resource>
							  </resources>              
							</configuration>            
						  </execution>
						  <execution>
							<id>copy extra libs</id>
							<phase>prepare-package</phase>
							<goals>
							  <goal>copy-resources</goal>
							</goals>
							<configuration>
							  <outputDirectory>${project.build.directory}/jsw/taskqueueprocessor/lib</outputDirectory>
							  <resources>          
								<resource>
								  <directory>${project.build.directory}/unpack/lib-bin</directory>
								  <filtering>false</filtering>
								</resource>
							  </resources>              
							</configuration>            
						  </execution>
						</executions>
					</plugin>
					
				    <!-- Application Assembler -->
					<plugin>
					 <groupId>org.codehaus.mojo</groupId>
					 <artifactId>appassembler-maven-plugin</artifactId>
					 <version>1.0</version>
		             <executions>
		                <execution>
		                <id>generate-jsw-scripts</id>
		                <phase>package</phase>
			                <goals>
			                   <goal>create-repository</goal>
		                       <goal>generate-daemons</goal>
			                </goals>
		                </execution>
		             </executions>			 
					 <configuration>
					     <assembleDirectory>${project.build.directory}/jsw/taskqueueprocessor</assembleDirectory>
					     <repositoryLayout>flat</repositoryLayout>
					     <target>${project.build.directory}</target>
					     <defaultJvmSettings>
					         <initialMemorySize>2048M</initialMemorySize>
					         <maxMemorySize>4096M</maxMemorySize>
					         <systemProperties>
					             <systemProperty>log.home=/var/log/eureka/tqp</systemProperty>
					             <systemProperty>http.proxyHost=${build.system.proxyhost}</systemProperty>
					             <systemProperty>http.proxyPort=${build.system.proxyport}</systemProperty>
					             <systemProperty>http.proxySet=${build.system.proxyset}</systemProperty>
					             <systemProperty>http.nonProxyHosts=${build.system.nonproxyhosts}</systemProperty>
					             <systemProperty>https.proxyHost=${build.system.proxyhost}</systemProperty>
					             <systemProperty>https.proxyPort=${build.system.proxyport}</systemProperty>
					         </systemProperties>
					     </defaultJvmSettings>
				         <programs>
				           <program>
				             <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				             <name>taskqueueprocessor</name>
				           </program>
				         </programs>
				         <daemons>
				           <daemon>
				             <id>taskqueueprocessor</id>
				             <mainClass>org.eurekastreams.taskqueueprocessor.console.MainApp</mainClass>
				             <commandLineArguments>
				               <commandLineArgument>start</commandLineArgument>
				             </commandLineArguments>
				             <platforms>
				               <platform>jsw</platform>
				             </platforms>
				             <generatorConfigurations>
				               <generatorConfiguration>
				                 <generator>jsw</generator>
				                 <includes>
				                   <include>linux-x86-32</include>
				                   <include>linux-x86-64</include>
				                  </includes>
				                  <configuration>
				                    <property>
				                      <name>set.default.REPO_DIR</name>
				                      <value>repo</value>
				                    </property>
				                    <property>
				                      <name>set.default.APP_BASE</name>
				                      <value>/opt/taskqueueprocessor</value>
				                    </property>
				                    <property>
				                      <name>wrapper.logfile</name>
				                      <value>/var/log/eureka/tqp/wrapper.log</value>
				                    </property>
				                    <property>
				                      <name>wrapper.working.dir</name>
				                      <value>/opt/taskqueueprocessor</value>
				                    </property>
				                    <property>
				                      <name>wrapper.java.command</name>
				                      <value>/usr/java/latest/bin/java</value>
				                    </property>
									  <property>
				                      <name>configuration.directory.in.classpath.last</name>
				                      <value>${build.taskqueueprocessor.additional-jsw-jar}</value>
				                    </property>
				                  </configuration>
				                </generatorConfiguration>
				              </generatorConfigurations>
				            </daemon>
				          </daemons>
				      </configuration>
					</plugin>					
				</plugins>
		        <resources>
		            <resource>
		                <directory>${basedir}/src/main/resources</directory>
		                <filtering>true</filtering>
		            </resource>
		            <resource>
		                <directory>${project.build.directory}/unpack/resources</directory>
		                <filtering>true</filtering>
		            </resource>
		        </resources>
			</build>
    	</profile>
       <!-- Profile to build the RPM file based on activation property "rpm.build" -->
        <profile>
            <id>RPM Build</id>
            <activation>
                <property>
                    <name>rpm.build</name>
                </property>
            </activation>           
          <build>
            <plugins>
              <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.0-beta-4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <name>eurekastreams-taskqueueprocessor-${rpm.build}</name>
                    <copyright>2009-2010, Lockheed Martin Corp.</copyright>
                    <distribution>Eureka Task Queue Processor</distribution>
                    <group>Application/Social Media</group>
                    <icon></icon>
                    
                    <packager>Social Media Program, Lockheed Martin Corp.</packager>
                    <prefix>/opt/taskqueueprocessor</prefix>
                    <defineStatements>
                       <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                       <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                       <defineStatement>_source_filedigest_algorithm md5</defineStatement>
                       <defineStatement>_binary_filedigest_algorithm md5</defineStatement>
                       <defineStatement>_source_payload nil</defineStatement>
                       <defineStatement>_binary_payload nil</defineStatement>
                    </defineStatements>
                    <mappings>
                        <mapping>
                            <directory>/opt</directory>
                            <filemode>555</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>target/jsw/</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <requires>
                    </requires>
                    <preinstallScriptlet>
                        <scriptFile>src/main/scripts/preinstall.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                     </preinstallScriptlet>
                    <postinstallScriptlet>
                        <scriptFile>src/main/scripts/postinstall.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>src/main/scripts/preremove.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>                    
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>src/main/scripts/postremove.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>                    
                    </postremoveScriptlet>
                    <requires>
                    	<require>eureka-server-activemq</require>
                    </requires>
                </configuration>
              </plugin>     
            </plugins>
          </build>
        </profile>	
        <!--
            This profile configres logs and other options for
            environments requiring faster performance
        -->
        <profile>
            <id>Production Configuration</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>prod</value>
                </property>
            </activation>           
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Replace log4j.xml with production version</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>target/classes/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
</project>
